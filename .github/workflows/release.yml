name: release
on:
  push:
    tags:
      - 'v*'        # e.g. v0.1.2
  workflow_dispatch: {}   # optional: allow manual runs

permissions:
  contents: write

env:
  BIN_NAME: ducky

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Build (release)
        run: cargo build --release

      # Unix: strip to shrink binary (optional)
      - name: Strip (Unix)
        if: runner.os != 'Windows'
        run: strip "target/release/${{ env.BIN_NAME }}" || true

      # ---- Package (Linux/macOS) ----
      - name: Package tar.gz (Unix)
        if: runner.os != 'Windows'
        run: |
          TAG="${{ github.ref_name }}"
          OUT="${{ env.BIN_NAME }}-${TAG}-${{ runner.os }}-x86_64"
          mkdir -p "dist/$OUT"
          cp "target/release/${{ env.BIN_NAME }}" "dist/$OUT/"
          tar -C dist -czf "dist/$OUT.tar.gz" "$OUT"
          (cd dist && shasum -a 256 "$OUT.tar.gz" > "$OUT.tar.gz.sha256")

      # ---- Package (Windows) ----
      - name: Package zip (Windows)
        if: runner.os == 'Windows'
        run: |
          $TAG="${{ github.ref_name }}"
          $OUT="$env:BIN_NAME-$TAG-${{ runner.os }}-x86_64"
          New-Item -ItemType Directory -Force -Path "dist/$OUT" | Out-Null
          Copy-Item "target/release/$env:BIN_NAME.exe" "dist/$OUT/"
          Compress-Archive -Path "dist/$OUT/*" -DestinationPath "dist/$OUT.zip"
        shell: pwsh

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-artifacts
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten files
        run: |
          mkdir -p out
          find dist -type f -maxdepth 3 -print -exec mv {} out/ \; || true

      - name: Create GitHub Release & upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: out/*
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
